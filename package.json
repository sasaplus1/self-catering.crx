{
  "dependencies": {
    "mustache": "^4.0.0"
  },
  "devDependencies": {
    "@rollup/plugin-commonjs": "^17.0.0",
    "@rollup/plugin-node-resolve": "^11.0.0",
    "eslint": "^7.0.0",
    "eslint-config-prettier": "^7.0.0",
    "eslint-plugin-node": "^11.0.0",
    "husky": "^4.2.3",
    "imagemin-cli": "^6.0.0",
    "imagemin-pngquant": "^9.0.0",
    "imagemin-svgo": "^8.0.0",
    "lint-staged": "^10.0.7",
    "npm-run-all": "^4.1.5",
    "onchange": "^7.0.0",
    "prettier": "^2.2.1",
    "rollup": "^2.34.0",
    "stylelint": "^13.2.0",
    "stylelint-config-prettier": "^8.0.1",
    "stylelint-config-standard": "^20.0.0"
  },
  "private": true,
  "scripts": {
    "build": "run-s build:*",
    "build:css": "cp ./src/*.css ./lib",
    "build:html": "cp ./src/*.html ./lib",
    "build:js": "rollup -c",
    "build:json": "node -p 'JSON.stringify(require(`./src/manifest`), null, 2)' > ./lib/manifest.json",
    "build:png": "imagemin ./src/*.png --out-dir=./lib --plugin=pngquant",
    "build:svg": "imagemin ./src/*.svg --out-dir=./lib --plugin=svgo",
    "fix": "run-s fix:*",
    "fix:css": "run-s fix:css:stylelint fix:css:prettier",
    "fix:css:prettier": "prettier --ignore-path .stylelintignore --write '**/*.css'",
    "fix:css:stylelint": "stylelint --cache --fix ./src/**/*.css",
    "fix:js": "run-s fix:js:eslint fix:js:prettier",
    "fix:js:eslint": "eslint --fix .",
    "fix:js:prettier": "prettier --ignore-path .eslintignore --write '**/*.js'",
    "fixpack": "npx fixpack",
    "lint": "run-s lint:*",
    "lint:css": "run-s lint:css:stylelint lint:css:prettier",
    "lint:css:prettier": "prettier --check --ignore-path .stylelintignore '**/*.css'",
    "lint:css:stylelint": "stylelint --cache ./src/**/*.css",
    "lint:js": "run-s lint:js:eslint lint:js:prettier",
    "lint:js:eslint": "eslint --cache .",
    "lint:js:prettier": "prettier --check --ignore-path .eslintignore '**/*.js'",
    "release": "zip -j ./self-catering.zip ./lib/*",
    "watch": "run-p -l watch:*",
    "watch:css": "onchange -v 'src/*.css' -- run-s build:css",
    "watch:html": "onchange -v 'src/*.html' -- run-s build:html",
    "watch:js": "onchange -v 'src/*.js' -- run-s build:js",
    "watch:json": "onchange -v 'src/manifest.js' -- run-s build:json",
    "watch:png": "onchange -v 'src/*.png' -- run-s build:png",
    "watch:svg": "onchange -v 'src/*.svg' -- run-s build:svg"
  }
}
